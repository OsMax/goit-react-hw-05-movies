{"version":3,"file":"static/js/914.349dbc70.chunk.js","mappings":"sKAAA,IAIA,EAJkB,+BAIlB,EAHgB,4C,SCqChB,OACEA,YApCF,WACE,OAAOC,EAAAA,EAAAA,IAAA,UACFC,EADE,6CACmDA,GAE3D,EAiCCC,aA/BF,SAAsBC,GACpB,OAAOH,EAAAA,EAAAA,IAAA,UACFC,EADE,+BACqCE,EADrC,qDACuFF,GAE/F,EA4BCG,gBA1BF,SAAyBC,GACvB,OAAOL,EAAAA,EAAAA,IAAA,UACFC,EADE,kBACwBI,EADxB,0BACkDJ,GAE1D,EAuBCK,cArBF,SAAuBD,GACrB,OAAOL,EAAAA,EAAAA,IAAA,UACFC,EADE,kBACwBI,EADxB,kCAC0DJ,GAElE,EAkBCM,iBAhBF,SAA0BF,GACxB,OAAOL,EAAAA,EAAAA,IAAA,UACFC,EADE,kBACwBI,EADxB,yCACiEJ,GAEzE,E,4HC9BD,EAA4B,gCAA5B,EAA2E,mCAA3E,EAAqH,2BAArH,EAA0J,8BAA1J,EAAkM,8BAAlM,EAA2O,+BAA3O,EAAgR,0BAAhR,EAA0T,oCAA1T,EAAqW,2B,SCmFrW,EA9EsB,WAAO,IAAD,MAC1B,GAA0BO,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MASjB,OAPAC,EAAAA,EAAAA,YAAU,WACRL,GAAW,GACXM,EAAAA,EAAAA,gBAAoBL,GAASM,MAAK,SAAAC,GAChCV,EAASU,EAAOC,MAChBT,GAAW,EACZ,GACF,GAAE,CAACC,KAEF,iCACE,SAAC,KAAD,CAAMS,GAAE,oBAAEP,EAASQ,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,UAAWC,UAAWC,EAAxD,4BAGCf,IAAW,SAACgB,EAAA,EAAD,IACXlB,IACC,iBAAKgB,UAAWC,EAAhB,WACE,iBAAKD,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAhB,UACE,gBACED,UAAWC,EACXE,IACEnB,EAAMoB,YAAN,0CACuCpB,EAAMoB,aACzCC,EAAQ,KAEdC,IAAKtB,EAAMuB,WAGf,iBAAKP,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,mBAAqCjB,EAAMuB,MAA3C,aACEvB,EAAMwB,aACF,IAAIC,KAAKzB,EAAMwB,cAAcE,cAC7B,UAHN,QAKA,eAAGV,UAAWC,EAAd,WACE,0CAAyB,IAD3B,UAEMU,KAAKC,MAA2B,GAArB5B,EAAM6B,cAFvB,SAIA,eAAGb,UAAWC,EAAd,WACE,yCACCjB,EAAM8B,aAET,eAAGd,UAAWC,EAAd,WACE,uCADF,UAEGjB,EAAM+B,cAFT,aAEG,EACGC,KAAI,SAAAC,GACJ,MAAO,IAAMA,EAAMC,IACpB,IACAC,KAAK,iBAId,gBAAInB,UAAWC,EAAf,WACE,yBACE,SAAC,KAAD,CAAMJ,GAAG,OAAOC,MAAOR,EAASQ,MAAhC,qBAIF,yBACE,SAAC,KAAD,CAAMD,GAAG,SAASC,MAAOR,EAASQ,MAAlC,0BAKJ,SAAC,EAAAsB,SAAD,CAAUC,UAAU,SAACnB,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,WAMX,C","sources":["components/GetApi/consts.js","components/GetApi/GetApi.js","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.js"],"sourcesContent":["const MAIN_HOST = 'https://api.themoviedb.org/3';\nconst API_KEY = '&api_key=6ab9b39d97ad84b66bbf0073e6af1a4c';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { MAIN_HOST, API_KEY };\n","import consts from './consts';\nimport axios from 'axios';\n\nfunction getTrending() {\n  return axios.get(\n    `${consts.MAIN_HOST}/trending/movie/day?language=en-US${consts.API_KEY}`\n  );\n}\n\nfunction searchMovies(query) {\n  return axios.get(\n    `${consts.MAIN_HOST}/search/movie?query=${query}&include_adult=false&language=en-US&page=1${consts.API_KEY}`\n  );\n}\n\nfunction getMoviesDetail(moviesId) {\n  return axios.get(\n    `${consts.MAIN_HOST}/movie/${moviesId}?language=en-US${consts.API_KEY}`\n  );\n}\n\nfunction getMoviesCast(moviesId) {\n  return axios.get(\n    `${consts.MAIN_HOST}/movie/${moviesId}/credits?language=en-US${consts.API_KEY}`\n  );\n}\n\nfunction getMoviesRevievs(moviesId) {\n  return axios.get(\n    `${consts.MAIN_HOST}/movie/${moviesId}/reviews?language=en-US&page=1${consts.API_KEY}`\n  );\n}\n\n// function rebuildFilter(filter) {\n//   return filter.split(' ').join('+');\n// }\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  getTrending,\n  searchMovies,\n  getMoviesDetail,\n  getMoviesCast,\n  getMoviesRevievs,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetails_container__Ys+c9\",\"detailsTitle\":\"MovieDetails_detailsTitle__aL4kz\",\"info\":\"MovieDetails_info__qv2SI\",\"imgCont\":\"MovieDetails_imgCont__R8OZz\",\"imgInfo\":\"MovieDetails_imgInfo__a1b3s\",\"infoCont\":\"MovieDetails_infoCont__qeBXB\",\"inf\":\"MovieDetails_inf__FZyHt\",\"moreInfoLinks\":\"MovieDetails_moreInfoLinks__uMthh\",\"back\":\"MovieDetails_back__Jj+0O\"};","import { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { Suspense, useEffect, useState } from 'react';\nimport API from 'components/GetApi/GetApi';\nimport Loader from 'components/Loader/Loader';\nimport css from './MovieDetails.module.css';\n\nconst MoviesDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    setLoading(true);\n    API.getMoviesDetail(movieId).then(result => {\n      setMovie(result.data);\n      setLoading(false);\n    });\n  }, [movieId]);\n  return (\n    <>\n      <Link to={location.state?.from ?? '/movies'} className={css.back}>\n        â‡¦ Go back\n      </Link>\n      {loading && <Loader />}\n      {movie && (\n        <div className={css.container}>\n          <div className={css.info}>\n            <div className={css.imgCont}>\n              <img\n                className={css.imgInfo}\n                src={\n                  movie.poster_path\n                    ? `https://image.tmdb.org/t/p/w400/${movie.poster_path}`\n                    : require('../../images/no-img.jpg')\n                }\n                alt={movie.title}\n              />\n            </div>\n            <div className={css.infoCont}>\n              <h2 className={css.detailsTitle}>{`${movie.title} (${\n                movie.release_date\n                  ? new Date(movie.release_date).getFullYear()\n                  : 'No date'\n              })`}</h2>\n              <p className={css.inf}>\n                <span>User score:</span>{' '}\n                {`${Math.round(movie.vote_average * 10)}%`}\n              </p>\n              <p className={css.inf}>\n                <span>Overview: </span>\n                {movie.overview}\n              </p>\n              <p className={css.inf}>\n                <span>Genres: </span>\n                {movie.genres\n                  ?.map(genre => {\n                    return '#' + genre.name;\n                  })\n                  .join('   ')}\n              </p>\n            </div>\n          </div>\n          <ul className={css.moreInfoLinks}>\n            <li>\n              <Link to=\"cast\" state={location.state}>\n                Cast\n              </Link>\n            </li>\n            <li>\n              <Link to=\"review\" state={location.state}>\n                Review\n              </Link>\n            </li>\n          </ul>\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default MoviesDetails;\n"],"names":["getTrending","axios","consts","searchMovies","query","getMoviesDetail","moviesId","getMoviesCast","getMoviesRevievs","useState","movie","setMovie","loading","setLoading","movieId","useParams","location","useLocation","useEffect","API","then","result","data","to","state","from","className","css","Loader","src","poster_path","require","alt","title","release_date","Date","getFullYear","Math","round","vote_average","overview","genres","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}